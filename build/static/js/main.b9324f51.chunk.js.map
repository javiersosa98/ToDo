{"version":3,"sources":["assets/images/logo.svg","components/TodoItem.jsx","components/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","todo","toggleTodo","clearTask","id","task","completed","className","type","checked","onChange","htmlFor","onClick","xmlns","width","height","fill","viewBox","d","TodoList","todos","map","KEY","App","useState","setTodos","todoTaskRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","src","logo","alt","newTodos","find","filter","ref","required","event","current","value","prevTodos","uuidv4","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,MAA0B,iC,eCElC,SAASA,EAAT,GAAoD,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,UACjCC,EAAwBH,EAAxBG,GAAIC,EAAoBJ,EAApBI,KAAMC,EAAcL,EAAdK,UAUlB,OACI,eAAC,WAAD,WACI,gCACI,sBAAKC,UAAU,UAAf,UACI,uBAAOH,GAAIC,EAAMG,KAAK,WAAWC,QAASH,EAAWI,SAZ7C,WACpBR,EAAWE,MAYC,uBAAOG,UAAU,iBAAiBI,QAASN,EAA3C,SAAkDA,OAEtD,qBAAKE,UAAU,mBAAf,SACI,wBAAQA,UAAU,YAAYK,QAZvB,WACnBT,EAAUC,IAWE,SACI,qBACIS,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLT,UAAU,mBACVU,QAAQ,YANZ,SAQI,sBAAMC,EAAE,wTAKxB,0BChCL,SAASC,EAAT,GAAqD,IAAjCC,EAAgC,EAAhCA,MAAOlB,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,UAE1C,OACI,6BACKiB,EAAMC,KAAI,SAACpB,GAAD,OACP,cAACD,EAAD,CAAwBC,KAAMA,EAAMC,WAAYA,EAAYC,UAAWA,GAAxDF,EAAKG,SCFpC,IAAMkB,EAAM,gBAEL,SAASC,IACd,MAA0BC,mBAAS,CACjC,CAAEpB,GAAI,EAAGC,KAAM,UAAWC,WAAW,KADvC,mBAAOc,EAAP,KAAcK,EAAd,KAIMC,EAAcC,mBAGpBC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GACFJ,EAASI,KAEV,IAGHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAKQ,KAAKK,UAAUf,MACxC,CAACA,IA6BJ,OACE,qBAAKb,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAK6B,IAAKC,EAAM9B,UAAU,WAAW+B,IAAI,SACzC,qBAAK/B,UAAU,YAAf,SACE,cAACY,EAAD,CAAUC,MAAOA,EAAOlB,WA/Bb,SAACE,GAClB,IAAMmC,EAAQ,YAAOnB,GACfnB,EAAOsC,EAASC,MAAK,SAACvC,GAAD,OAAUA,EAAKG,KAAOA,KACjDH,EAAKK,WAAaL,EAAKK,UACvBmB,EAASc,IA2B6CpC,UAXtC,SAACC,GACjB,IAAMmC,EAAQ,YAAOnB,GACrBK,EAASc,EAASE,QAAO,SAACxC,GAAD,OAAUA,EAAKG,KAAOA,WAW3C,sBAAKG,UAAU,iBAAf,UACE,uBAAMA,UAAU,OAAhB,UACE,uBAAOC,KAAK,OAAOkC,IAAKhB,EAAaiB,UAAQ,IAC7C,uBAAOpC,UAAU,aAAjB,SACE,sBAAMA,UAAU,YAAhB,8BAGJ,wBAAQA,UAAU,UAAUK,QAhCd,SAACgC,GACrB,IAAMvC,EAAOqB,EAAYmB,QAAQC,MACpB,KAATzC,IAEJoB,GAAS,SAACsB,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAE3C,GAAI4C,cAAU3C,OAAMC,WAAW,QAGzDoB,EAAYmB,QAAQC,MAAQ,OAwBtB,SACE,qBACEjC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLT,UAAU,gBACVU,QAAQ,YANV,SAQE,sBAAMC,EAAE,uGAId,sBAAKX,UAAU,kBAAf,uBACaa,EAAMqB,QAAO,SAACxC,GAAD,OAAWA,EAAKK,aAAW2C,OADrD,gCClFR,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b9324f51.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Fragment } from 'react';\r\n\r\nexport function TodoItem({ todo, toggleTodo, clearTask }) {\r\n    const { id, task, completed } = todo;\r\n\r\n    const handleTodoClick = () => {\r\n        toggleTodo(id);\r\n    };\r\n\r\n    const handleClearAll = () => {\r\n        clearTask(id);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <div className=\"wrapper\">\r\n                    <input id={task} type=\"checkbox\" checked={completed} onChange={handleTodoClick} />\r\n                    <label className=\"nameTask-label\" htmlFor={task}>{task}</label>\r\n                </div>\r\n                <div className=\"conteiner-button\">\r\n                    <button className=\"btn-Trash\" onClick={handleClearAll}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"16\"\r\n                            height=\"16\"\r\n                            fill=\"currentColor\"\r\n                            className=\"bi bi-trash-fill\"\r\n                            viewBox=\"0 0 16 16\"\r\n                        >\r\n                            <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { TodoItem } from \"./TodoItem\";\r\n\r\nexport function TodoList({ todos, toggleTodo, clearTask }) {\r\n\r\n    return (\r\n        <ul>\r\n            {todos.map((todo) => (\r\n                <TodoItem key={todo.id} todo={todo} toggleTodo={toggleTodo} clearTask={clearTask} />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport logo from \"./assets/images/logo.svg\";\nimport \"./assets/css/App.css\";\nimport { TodoList } from \"./components/TodoList\";\n\nconst KEY = \"todoApp.todos\";\n\nexport function App() {\n  const [todos, setTodos] = useState([\n    { id: 1, task: \"Tarea 1\", completed: false },\n  ]);\n\n  const todoTaskRef = useRef();\n\n  /*Extrae del localstorage las tareas antes de refrescar */\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(KEY));\n    if (storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, []);\n\n  /*Guarda en el localstorage las tareas que se van aÃ±adiendo al array todos */\n  useEffect(() => {\n    localStorage.setItem(KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  /*Cambia el estado del campo completed si el input-checkbox esta presionado o no */\n  const toggleTodo = (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n  };\n\n  /*Agrega una tarea */\n  const handleTodoAdd = (event) => {\n    const task = todoTaskRef.current.value;\n    if (task === \"\") return;\n\n    setTodos((prevTodos) => {\n      return [...prevTodos, { id: uuidv4(), task, completed: false }];\n    });\n\n    todoTaskRef.current.value = null;\n  };\n\n  /*Borra una tarea */\n  const clearTask = (id) => {\n    const newTodos = [...todos];\n    setTodos(newTodos.filter((todo) => todo.id !== id));\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"listTasks\">\n          <TodoList todos={todos} toggleTodo={toggleTodo} clearTask={clearTask} />\n        </div>\n        <div className=\"formNewTaskAdd\">\n          <form className=\"form\">\n            <input type=\"text\" ref={todoTaskRef} required />\n            <label className=\"lbl-nombre\">\n              <span className=\"text-nomb\">Nueva Tarea</span>\n            </label>\n          </form>\n          <button className=\"btn-Add\" onClick={handleTodoAdd}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              className=\"bi bi-plus-lg\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\n            </svg>\n          </button>\n        </div>\n        <div className=\"finishTask-text\">\n          Te quedan {todos.filter((todo) => !todo.completed).length} tareas por\n          terminar.\n        </div>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}