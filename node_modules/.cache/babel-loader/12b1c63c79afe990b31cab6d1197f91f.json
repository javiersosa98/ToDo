{"ast":null,"code":"import _toConsumableArray from\"/home/javier.sosa/Escritorio/JS PROJECTS/ToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/javier.sosa/Escritorio/JS PROJECTS/ToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from\"react\";import{v4 as uuidv4}from\"uuid\";import logo from\"./assets/images/logo.svg\";import\"./assets/css/App.css\";import{TodoList}from\"./components/TodoList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var KEY=\"todoApp.todos\";export function App(){var _useState=useState([{id:1,task:\"Tarea 1\",completed:false}]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var todoTaskRef=useRef();/*Extrae del localstorage las tareas antes de refrescar */useEffect(function(){var storedTodos=JSON.parse(localStorage.getItem(KEY));if(storedTodos){setTodos(storedTodos);}},[]);/*Guarda en el localstorage las tareas que se van añadiendo al array todos */useEffect(function(){localStorage.setItem(KEY,JSON.stringify(todos));},[todos]);/*Cambia el estado del campo completed si el input-checkbox esta presionado o no */var toggleTodo=function toggleTodo(id){var newTodos=_toConsumableArray(todos);var todo=newTodos.find(function(todo){return todo.id===id;});todo.completed=!todo.completed;setTodos(newTodos);};/*Agrega una tarea */var handleTodoAdd=function handleTodoAdd(event){var task=todoTaskRef.current.value;if(task===\"\")return;setTodos(function(prevTodos){return[].concat(_toConsumableArray(prevTodos),[{id:uuidv4(),task:task,completed:false}]);});todoTaskRef.current.value=null;};/*Borra una tarea */var clearTask=function clearTask(id){var newTodos=_toConsumableArray(todos);setTodos(newTodos.filter(function(todo){return todo.id!==id;}));};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,className:\"App-logo\",alt:\"logo\"}),/*#__PURE__*/_jsx(\"div\",{className:\"listTasks\",children:/*#__PURE__*/_jsx(TodoList,{todos:todos,toggleTodo:toggleTodo,clearTask:clearTask})}),/*#__PURE__*/_jsxs(\"div\",{className:\"formNewTaskAdd\",children:[/*#__PURE__*/_jsxs(\"form\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",ref:todoTaskRef,required:true}),/*#__PURE__*/_jsx(\"label\",{className:\"lbl-nombre\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-nomb\",children:\"Nueva Tarea\"})})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-Add\",onClick:handleTodoAdd,children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"16\",height:\"16\",fill:\"currentColor\",className:\"bi bi-plus-lg\",viewBox:\"0 0 16 16\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\"})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"finishTask-text\",children:[\"Te quedan \",todos.filter(function(todo){return!todo.completed;}).length,\" tareas por terminar.\"]})]})});}","map":{"version":3,"sources":["/home/javier.sosa/Escritorio/JS PROJECTS/ToDo/src/App.js"],"names":["React","useState","useRef","useEffect","v4","uuidv4","TodoList","KEY","App","id","task","completed","todos","setTodos","todoTaskRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","toggleTodo","newTodos","todo","find","handleTodoAdd","event","current","value","prevTodos","clearTask","filter","logo","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport logo from \"./assets/images/logo.svg\";\nimport \"./assets/css/App.css\";\nimport { TodoList } from \"./components/TodoList\";\n\nconst KEY = \"todoApp.todos\";\n\nexport function App() {\n  const [todos, setTodos] = useState([\n    { id: 1, task: \"Tarea 1\", completed: false },\n  ]);\n\n  const todoTaskRef = useRef();\n\n  /*Extrae del localstorage las tareas antes de refrescar */\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(KEY));\n    if (storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, []);\n\n  /*Guarda en el localstorage las tareas que se van añadiendo al array todos */\n  useEffect(() => {\n    localStorage.setItem(KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  /*Cambia el estado del campo completed si el input-checkbox esta presionado o no */\n  const toggleTodo = (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n  };\n\n  /*Agrega una tarea */\n  const handleTodoAdd = (event) => {\n    const task = todoTaskRef.current.value;\n    if (task === \"\") return;\n\n    setTodos((prevTodos) => {\n      return [...prevTodos, { id: uuidv4(), task, completed: false }];\n    });\n\n    todoTaskRef.current.value = null;\n  };\n\n  /*Borra una tarea */\n  const clearTask = (id) => {\n    const newTodos = [...todos];\n    setTodos(newTodos.filter((todo) => todo.id !== id));\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"listTasks\">\n          <TodoList todos={todos} toggleTodo={toggleTodo} clearTask={clearTask} />\n        </div>\n        <div className=\"formNewTaskAdd\">\n          <form className=\"form\">\n            <input type=\"text\" ref={todoTaskRef} required />\n            <label className=\"lbl-nombre\">\n              <span className=\"text-nomb\">Nueva Tarea</span>\n            </label>\n          </form>\n          <button className=\"btn-Add\" onClick={handleTodoAdd}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              className=\"bi bi-plus-lg\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\n            </svg>\n          </button>\n        </div>\n        <div className=\"finishTask-text\">\n          Te quedan {todos.filter((todo) => !todo.completed).length} tareas por\n          terminar.\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}